{
  "todo": [
    {
      "assignedTo": {
        "name": "Scott Westover"
      },
      "creation_time": "2023-12-01T15:33:58.766Z",
      "description": {
        "content": "cannot provide 0 for a delay value",
        "mime": "text/markdown"
      },
      "details": {
        "content": "In the health bar class, when you use the `setMeterPercentageAnimated` method, you have an option to pass a delay, which is used for the length of time the animation will play for. If you pass `0` for this value, the code treats this as if a value was not provided and the default value is used. \nTo fix this, we need to check if that value is undefined, or add fallback logic if a `0` was provided. Example: \n```\nduration: options?.duration || options?.duration === 0 ? 0 : 1000,\n```\n",
        "mime": "text/markdown"
      },
      "id": "7",
      "references": [],
      "title": "Health Bar - animation of health bar does not honor 0 for delay",
      "type": "bug"
    },
    {
      "assignedTo": {
        "name": "Scott Westover"
      },
      "creation_time": "2023-12-01T13:43:37.813Z",
      "description": {
        "content": "Prevent menu from being opened when dialog is on screen",
        "mime": "text/markdown"
      },
      "id": "1",
      "references": [],
      "title": "Prevent menu from being opened when dialog is on screen",
      "type": "bug",
      "details": {
        "content": "When the dialog ui is on the screen (talking to npc or when saving game progress), user can hit the `enter` key and open the menu and navigate it. This input should be blocked until the user closes the dialog menu.",
        "mime": "text/markdown"
      }
    },
    {
      "assignedTo": {
        "name": "Scott Westover"
      },
      "creation_time": "2023-12-01T15:28:48.588Z",
      "description": {
        "content": "add logic to handle when the fully qty of item is used",
        "mime": "text/markdown"
      },
      "details": {
        "content": "In the inventory scene, we need to add support for when the player uses their last item, for example only have 1 potion left and then we heal a monster. When we get down to 0, we need to remove that item from the inventory and inventory screen. We will need to move all of the game objects, and ensure the player cannot select that item again.",
        "mime": "text/markdown"
      },
      "id": "5",
      "references": [],
      "title": "Inventory scene - handle when item qty is 0"
    },
    {
      "assignedTo": {
        "name": "Scott Westover"
      },
      "creation_time": "2023-12-01T14:08:00.649Z",
      "description": {
        "content": "add monster details view",
        "mime": "text/markdown"
      },
      "details": {
        "content": "In the monster party scene, when you try to select a monster, nothing shows up on the scene. We should add a very simple ui where we show the monster details. This would be similar to the details we see in a Pokemon like game:\n\n* monster name\n* monster level\n* monster nickname\n* monster moves\n* monster stats (atk, def, speed, etc.)\n* monster sprite",
        "mime": "text/markdown"
      },
      "id": "4",
      "references": [],
      "title": "Monster Party Scene - add monster details"
    },
    {
      "assignedTo": {
        "name": "Scott Westover"
      },
      "creation_time": "2023-12-01T15:31:05.958Z",
      "description": {
        "content": "modify logic tied to using items",
        "mime": "text/markdown"
      },
      "details": {
        "content": "When the player is in the battle scene, and they choose to use an item, we should not sure any animations in the monster party scene and instead we should go back to the battle scene right away. Then, in this scene we will add text to show the item that was used and use an appropiate animation if needed.",
        "mime": "text/markdown"
      },
      "id": "6",
      "references": [],
      "title": "Monster Party Scene - add support for using items in battle scene"
    },
    {
      "assignedTo": {
        "name": "Scott Westover"
      },
      "creation_time": "2023-12-01T13:47:18.544Z",
      "description": {
        "content": "add support for random move for ai",
        "mime": "text/markdown"
      },
      "id": "2",
      "references": [],
      "title": "Pick random monster attack for enemy during battle",
      "details": {
        "content": "In battle scene, add simple logic for having enemy monster choose a random attack from their available attacks.",
        "mime": "text/markdown"
      }
    },
    {
      "assignedTo": {
        "name": "Scott Westover"
      },
      "creation_time": "2023-12-01T14:05:01.898Z",
      "description": {
        "content": "Create todo list for videos in inventory and party scene",
        "mime": "text/markdown"
      },
      "details": {
        "content": "After working on the inventory scene, it became very coupled to the logic in the monster party scene, needed in order to select monster to use items on. In order to make this more approachable, need to review code and the order these elements are created in. We might be able to create party scene first, and then move to inventory scene.\n\nNotes:\n* For testing various scenarios we can modify the monster data to have various hp levels.\n* We will likely need just a review video that will go over the scene at a high level and review the components we will need to create in order to make everything work.\n* In review video, we should go over how passing data will work in order to make everything function.\n* For these scenes, these have no tie in to the battle scene for the time being, just from the menu in the world scene.",
        "mime": "text/markdown"
      },
      "id": "3",
      "references": [],
      "title": "Plan out inventory and party scene video chapters"
    }
  ],
  "in-progress": [],
  "testing": [],
  "done": []
}